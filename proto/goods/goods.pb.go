// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/goods/goods.proto

package goods

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 数据库 barcodes
type Barcode struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GoodsId              string   `protobuf:"bytes,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id,omitempty"`
	StockId              string   `protobuf:"bytes,3,opt,name=stock_id,json=stockId,proto3" json:"stock_id,omitempty"`
	Price                int64    `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Width                int64    `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               int64    `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Depth                int64    `protobuf:"varint,7,opt,name=depth,proto3" json:"depth,omitempty"`
	Unit                 string   `protobuf:"bytes,8,opt,name=unit,proto3" json:"unit,omitempty"`
	Spec                 string   `protobuf:"bytes,9,opt,name=spec,proto3" json:"spec,omitempty"`
	Grossweight          int64    `protobuf:"varint,10,opt,name=grossweight,proto3" json:"grossweight,omitempty"`
	Netweight            int64    `protobuf:"varint,11,opt,name=netweight,proto3" json:"netweight,omitempty"`
	Img                  string   `protobuf:"bytes,12,opt,name=img,proto3" json:"img,omitempty"`
	BarcodeImg           string   `protobuf:"bytes,13,opt,name=barcode_img,json=barcodeImg,proto3" json:"barcode_img,omitempty"`
	CreatedAt            string   `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Barcode) Reset()         { *m = Barcode{} }
func (m *Barcode) String() string { return proto.CompactTextString(m) }
func (*Barcode) ProtoMessage()    {}
func (*Barcode) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{0}
}

func (m *Barcode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Barcode.Unmarshal(m, b)
}
func (m *Barcode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Barcode.Marshal(b, m, deterministic)
}
func (m *Barcode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Barcode.Merge(m, src)
}
func (m *Barcode) XXX_Size() int {
	return xxx_messageInfo_Barcode.Size(m)
}
func (m *Barcode) XXX_DiscardUnknown() {
	xxx_messageInfo_Barcode.DiscardUnknown(m)
}

var xxx_messageInfo_Barcode proto.InternalMessageInfo

func (m *Barcode) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Barcode) GetGoodsId() string {
	if m != nil {
		return m.GoodsId
	}
	return ""
}

func (m *Barcode) GetStockId() string {
	if m != nil {
		return m.StockId
	}
	return ""
}

func (m *Barcode) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Barcode) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Barcode) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Barcode) GetDepth() int64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *Barcode) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Barcode) GetSpec() string {
	if m != nil {
		return m.Spec
	}
	return ""
}

func (m *Barcode) GetGrossweight() int64 {
	if m != nil {
		return m.Grossweight
	}
	return 0
}

func (m *Barcode) GetNetweight() int64 {
	if m != nil {
		return m.Netweight
	}
	return 0
}

func (m *Barcode) GetImg() string {
	if m != nil {
		return m.Img
	}
	return ""
}

func (m *Barcode) GetBarcodeImg() string {
	if m != nil {
		return m.BarcodeImg
	}
	return ""
}

func (m *Barcode) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Barcode) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// 数据库 goods
type Good struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	EngName              string   `protobuf:"bytes,3,opt,name=eng_name,json=engName,proto3" json:"eng_name,omitempty"`
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Status               int64    `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	BrandId              int64    `protobuf:"varint,6,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	CategoryId           int64    `protobuf:"varint,7,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	DepartmentId         int64    `protobuf:"varint,8,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	FirmId               int64    `protobuf:"varint,9,opt,name=firm_id,json=firmId,proto3" json:"firm_id,omitempty"`
	UnspscId             int64    `protobuf:"varint,10,opt,name=unspsc_id,json=unspscId,proto3" json:"unspsc_id,omitempty"`
	TaxcodeId            int64    `protobuf:"varint,11,opt,name=taxcode_id,json=taxcodeId,proto3" json:"taxcode_id,omitempty"`
	Cess                 int64    `protobuf:"varint,12,opt,name=cess,proto3" json:"cess,omitempty"`
	CreatedAt            string   `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Good) Reset()         { *m = Good{} }
func (m *Good) String() string { return proto.CompactTextString(m) }
func (*Good) ProtoMessage()    {}
func (*Good) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{1}
}

func (m *Good) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Good.Unmarshal(m, b)
}
func (m *Good) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Good.Marshal(b, m, deterministic)
}
func (m *Good) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Good.Merge(m, src)
}
func (m *Good) XXX_Size() int {
	return xxx_messageInfo_Good.Size(m)
}
func (m *Good) XXX_DiscardUnknown() {
	xxx_messageInfo_Good.DiscardUnknown(m)
}

var xxx_messageInfo_Good proto.InternalMessageInfo

func (m *Good) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Good) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Good) GetEngName() string {
	if m != nil {
		return m.EngName
	}
	return ""
}

func (m *Good) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Good) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Good) GetBrandId() int64 {
	if m != nil {
		return m.BrandId
	}
	return 0
}

func (m *Good) GetCategoryId() int64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *Good) GetDepartmentId() int64 {
	if m != nil {
		return m.DepartmentId
	}
	return 0
}

func (m *Good) GetFirmId() int64 {
	if m != nil {
		return m.FirmId
	}
	return 0
}

func (m *Good) GetUnspscId() int64 {
	if m != nil {
		return m.UnspscId
	}
	return 0
}

func (m *Good) GetTaxcodeId() int64 {
	if m != nil {
		return m.TaxcodeId
	}
	return 0
}

func (m *Good) GetCess() int64 {
	if m != nil {
		return m.Cess
	}
	return 0
}

func (m *Good) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Good) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

// 商品信息 抽象对象不对应数据库(有用查询数据返回)
type GoodsInfo struct {
	Good                 *Good      `protobuf:"bytes,1,opt,name=good,proto3" json:"good,omitempty"`
	Barcode              []*Barcode `protobuf:"bytes,2,rep,name=barcode,proto3" json:"barcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GoodsInfo) Reset()         { *m = GoodsInfo{} }
func (m *GoodsInfo) String() string { return proto.CompactTextString(m) }
func (*GoodsInfo) ProtoMessage()    {}
func (*GoodsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{2}
}

func (m *GoodsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoodsInfo.Unmarshal(m, b)
}
func (m *GoodsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoodsInfo.Marshal(b, m, deterministic)
}
func (m *GoodsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoodsInfo.Merge(m, src)
}
func (m *GoodsInfo) XXX_Size() int {
	return xxx_messageInfo_GoodsInfo.Size(m)
}
func (m *GoodsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GoodsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GoodsInfo proto.InternalMessageInfo

func (m *GoodsInfo) GetGood() *Good {
	if m != nil {
		return m.Good
	}
	return nil
}

func (m *GoodsInfo) GetBarcode() []*Barcode {
	if m != nil {
		return m.Barcode
	}
	return nil
}

type ListQuery struct {
	Limit                int64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort                 string   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQuery) Reset()         { *m = ListQuery{} }
func (m *ListQuery) String() string { return proto.CompactTextString(m) }
func (*ListQuery) ProtoMessage()    {}
func (*ListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{3}
}

func (m *ListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQuery.Unmarshal(m, b)
}
func (m *ListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQuery.Marshal(b, m, deterministic)
}
func (m *ListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQuery.Merge(m, src)
}
func (m *ListQuery) XXX_Size() int {
	return xxx_messageInfo_ListQuery.Size(m)
}
func (m *ListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ListQuery proto.InternalMessageInfo

func (m *ListQuery) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListQuery) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListQuery) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

type Request struct {
	ListQuery            *ListQuery `protobuf:"bytes,1,opt,name=list_query,json=listQuery,proto3" json:"list_query,omitempty"`
	Good                 *Good      `protobuf:"bytes,2,opt,name=good,proto3" json:"good,omitempty"`
	Barcode              *Barcode   `protobuf:"bytes,3,opt,name=barcode,proto3" json:"barcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{4}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetListQuery() *ListQuery {
	if m != nil {
		return m.ListQuery
	}
	return nil
}

func (m *Request) GetGood() *Good {
	if m != nil {
		return m.Good
	}
	return nil
}

func (m *Request) GetBarcode() *Barcode {
	if m != nil {
		return m.Barcode
	}
	return nil
}

type Response struct {
	GoodsInfo            *GoodsInfo   `protobuf:"bytes,1,opt,name=goods_info,json=goodsInfo,proto3" json:"goods_info,omitempty"`
	GoodsInfos           []*GoodsInfo `protobuf:"bytes,2,rep,name=goods_infos,json=goodsInfos,proto3" json:"goods_infos,omitempty"`
	Valid                bool         `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ff7bf58be59df1, []int{5}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetGoodsInfo() *GoodsInfo {
	if m != nil {
		return m.GoodsInfo
	}
	return nil
}

func (m *Response) GetGoodsInfos() []*GoodsInfo {
	if m != nil {
		return m.GoodsInfos
	}
	return nil
}

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*Barcode)(nil), "goods.Barcode")
	proto.RegisterType((*Good)(nil), "goods.Good")
	proto.RegisterType((*GoodsInfo)(nil), "goods.GoodsInfo")
	proto.RegisterType((*ListQuery)(nil), "goods.ListQuery")
	proto.RegisterType((*Request)(nil), "goods.Request")
	proto.RegisterType((*Response)(nil), "goods.Response")
}

func init() { proto.RegisterFile("proto/goods/goods.proto", fileDescriptor_42ff7bf58be59df1) }

var fileDescriptor_42ff7bf58be59df1 = []byte{
	// 653 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0xfe, 0x13, 0x3b, 0x71, 0x3c, 0x6e, 0xd3, 0x6a, 0xf5, 0x8b, 0x9a, 0x93, 0x1a, 0x85, 0x9b,
	0x20, 0xa4, 0x56, 0x94, 0x27, 0x28, 0x20, 0x55, 0x96, 0x10, 0x12, 0x96, 0xe0, 0x36, 0x72, 0xbd,
	0x53, 0x67, 0x45, 0xe2, 0x75, 0xbd, 0x1b, 0x4a, 0x6f, 0x11, 0x3c, 0x29, 0x4f, 0xc1, 0x1d, 0x9a,
	0xd9, 0x8d, 0x5b, 0x05, 0x81, 0x72, 0x63, 0xcd, 0x77, 0xf0, 0x1e, 0xbe, 0x19, 0x1b, 0x8e, 0x9a,
	0x56, 0x5b, 0x7d, 0x5a, 0x69, 0x2d, 0x8d, 0x7b, 0x9e, 0x30, 0x23, 0x06, 0x0c, 0xa6, 0xdf, 0x02,
	0x88, 0x5e, 0x17, 0x6d, 0xa9, 0x25, 0x8a, 0x31, 0xf4, 0x95, 0x4c, 0x7b, 0x93, 0xde, 0x2c, 0xc8,
	0xfb, 0x4a, 0x8a, 0x87, 0x30, 0x62, 0xd3, 0x5c, 0xc9, 0xb4, 0x3f, 0xe9, 0xcd, 0xe2, 0x3c, 0x62,
	0x9c, 0xb1, 0x64, 0xac, 0x2e, 0x3f, 0x93, 0x14, 0x38, 0x89, 0x71, 0x26, 0xc5, 0xff, 0x30, 0x68,
	0x5a, 0x55, 0x62, 0x1a, 0xf2, 0x42, 0x0e, 0x10, 0x7b, 0xa3, 0xa4, 0x5d, 0xa4, 0x03, 0xc7, 0x32,
	0x10, 0x0f, 0x60, 0xb8, 0x40, 0x55, 0x2d, 0x6c, 0x3a, 0x64, 0xda, 0x23, 0x72, 0x4b, 0x6c, 0xec,
	0x22, 0x8d, 0x9c, 0x9b, 0x81, 0x10, 0x10, 0xae, 0x6b, 0x65, 0xd3, 0x11, 0x6f, 0xc8, 0x35, 0x71,
	0xa6, 0xc1, 0x32, 0x8d, 0x1d, 0x47, 0xb5, 0x98, 0x40, 0x52, 0xb5, 0xda, 0x98, 0x1b, 0xb7, 0x34,
	0xf0, 0x1a, 0xf7, 0x29, 0xf1, 0x04, 0xe2, 0x1a, 0xad, 0xd7, 0x13, 0xd6, 0xef, 0x08, 0x71, 0x08,
	0x81, 0x5a, 0x55, 0xe9, 0x1e, 0x2f, 0x49, 0xa5, 0x38, 0x86, 0xe4, 0xd2, 0x85, 0x34, 0x27, 0x65,
	0x9f, 0x15, 0xf0, 0x54, 0xb6, 0xaa, 0xc4, 0x53, 0x80, 0xb2, 0xc5, 0xc2, 0xa2, 0x9c, 0x17, 0x36,
	0x1d, 0xb3, 0x1e, 0x7b, 0xe6, 0xdc, 0x92, 0xbc, 0x6e, 0xe4, 0x46, 0x3e, 0x70, 0xb2, 0x67, 0xce,
	0xed, 0xf4, 0x57, 0x1f, 0xc2, 0x0b, 0xad, 0xe5, 0xbd, 0x0e, 0xc4, 0xdc, 0x01, 0x01, 0x61, 0x5d,
	0xac, 0xd0, 0xa7, 0xcf, 0x35, 0x45, 0x8f, 0x75, 0x35, 0x67, 0xde, 0x47, 0x8f, 0x75, 0xf5, 0x9e,
	0x24, 0x01, 0xa1, 0x44, 0x53, 0x72, 0xf2, 0x71, 0xce, 0x35, 0x45, 0x6c, 0x6c, 0x61, 0xd7, 0xc6,
	0x27, 0xef, 0x11, 0x2d, 0x73, 0xd9, 0x16, 0xb5, 0xa4, 0x0e, 0xba, 0xf0, 0x23, 0xc6, 0x99, 0xa4,
	0xdb, 0x96, 0x85, 0xc5, 0x4a, 0xb7, 0xb7, 0xa4, 0xba, 0x1e, 0xc0, 0x86, 0xca, 0xa4, 0x78, 0x06,
	0xfb, 0x12, 0x9b, 0xa2, 0xb5, 0x2b, 0xac, 0x2d, 0x59, 0x46, 0x6c, 0xd9, 0xbb, 0x23, 0x33, 0x29,
	0x8e, 0x20, 0xba, 0x52, 0xed, 0x8a, 0xe4, 0xd8, 0xed, 0x4c, 0x30, 0x93, 0xe2, 0x31, 0xc4, 0xeb,
	0xda, 0x34, 0xa6, 0x24, 0xc9, 0x35, 0x67, 0xe4, 0x88, 0x4c, 0x52, 0x52, 0xb6, 0xf8, 0xea, 0x92,
	0x96, 0x9b, 0xd6, 0x78, 0x26, 0xe3, 0x40, 0x4a, 0x34, 0x86, 0x7b, 0x13, 0xe4, 0x5c, 0x6f, 0x65,
	0xbf, 0xff, 0xef, 0xec, 0xc7, 0xdb, 0xd9, 0x7f, 0x82, 0xf8, 0x82, 0x87, 0xba, 0xbe, 0xd2, 0xe2,
	0x18, 0x42, 0x9a, 0x70, 0xee, 0x40, 0x72, 0x96, 0x9c, 0xb8, 0x0f, 0x86, 0xf4, 0x9c, 0x05, 0x31,
	0x83, 0xc8, 0x77, 0x3d, 0xed, 0x4f, 0x82, 0x59, 0x72, 0x36, 0xf6, 0x1e, 0xff, 0x0d, 0xe5, 0x1b,
	0x79, 0x9a, 0x41, 0xfc, 0x4e, 0x19, 0xfb, 0x61, 0x8d, 0xed, 0x2d, 0xcd, 0xf3, 0x52, 0xad, 0x94,
	0xf5, 0x1f, 0x97, 0x03, 0x74, 0x99, 0xa6, 0xa8, 0x5c, 0x77, 0x83, 0x9c, 0x6b, 0x9e, 0x67, 0xdd,
	0x5a, 0xdf, 0x59, 0xae, 0xa7, 0x3f, 0x7a, 0x10, 0xe5, 0x78, 0xbd, 0x46, 0x63, 0xc5, 0x29, 0xc0,
	0x52, 0x19, 0x3b, 0xbf, 0xa6, 0x75, 0xfd, 0x39, 0x0f, 0xfd, 0x19, 0xba, 0xfd, 0xf2, 0x78, 0xd9,
	0x6d, 0xbd, 0xb9, 0x52, 0x7f, 0x87, 0x2b, 0x05, 0xec, 0xf9, 0xeb, 0x95, 0xbe, 0xf7, 0x60, 0x94,
	0xa3, 0x69, 0x74, 0x6d, 0x90, 0x0e, 0xe2, 0x7f, 0x0e, 0xf5, 0x95, 0xde, 0x3a, 0x48, 0x17, 0x68,
	0x1e, 0x57, 0x5d, 0xb6, 0x2f, 0x21, 0xb9, 0x7b, 0xc1, 0xf8, 0xf8, 0xfe, 0x7c, 0x03, 0xba, 0x37,
	0x0c, 0xc5, 0xf6, 0xa5, 0x58, 0xfa, 0x5f, 0xcc, 0x28, 0x77, 0xe0, 0xec, 0x67, 0x0f, 0x06, 0xec,
	0x17, 0xcf, 0x21, 0xa4, 0x3b, 0x8b, 0xcd, 0x89, 0x7d, 0x48, 0x8f, 0x0e, 0x3a, 0xec, 0x0e, 0x3b,
	0xfd, 0x4f, 0xcc, 0x20, 0xb8, 0xc0, 0x9d, 0x9c, 0x2f, 0x60, 0xf8, 0x86, 0x87, 0x67, 0x47, 0xf3,
	0x47, 0x1e, 0xa5, 0x1d, 0xcd, 0x6f, 0x71, 0x89, 0x3b, 0x99, 0x2f, 0x87, 0xfc, 0x9b, 0x7e, 0xf5,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x57, 0x8e, 0xcc, 0xff, 0xc1, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Goods service

type GoodsClient interface {
	// 获取商品列表
	List(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 根据 唯一 获取商品信息
	Get(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 创建商品
	Create(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 更新商品
	Update(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 删除商品
	Delete(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type goodsClient struct {
	c           client.Client
	serviceName string
}

func NewGoodsClient(serviceName string, c client.Client) GoodsClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "goods"
	}
	return &goodsClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *goodsClient) List(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Goods.List", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) Get(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Goods.Get", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) Create(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Goods.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) Update(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Goods.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) Delete(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Goods.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Goods service

type GoodsHandler interface {
	// 获取商品列表
	List(context.Context, *Request, *Response) error
	// 根据 唯一 获取商品信息
	Get(context.Context, *Request, *Response) error
	// 创建商品
	Create(context.Context, *Request, *Response) error
	// 更新商品
	Update(context.Context, *Request, *Response) error
	// 删除商品
	Delete(context.Context, *Request, *Response) error
}

func RegisterGoodsHandler(s server.Server, hdlr GoodsHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Goods{hdlr}, opts...))
}

type Goods struct {
	GoodsHandler
}

func (h *Goods) List(ctx context.Context, in *Request, out *Response) error {
	return h.GoodsHandler.List(ctx, in, out)
}

func (h *Goods) Get(ctx context.Context, in *Request, out *Response) error {
	return h.GoodsHandler.Get(ctx, in, out)
}

func (h *Goods) Create(ctx context.Context, in *Request, out *Response) error {
	return h.GoodsHandler.Create(ctx, in, out)
}

func (h *Goods) Update(ctx context.Context, in *Request, out *Response) error {
	return h.GoodsHandler.Update(ctx, in, out)
}

func (h *Goods) Delete(ctx context.Context, in *Request, out *Response) error {
	return h.GoodsHandler.Delete(ctx, in, out)
}
