// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/unspsc/unspsc.proto

package unspsc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 数据库 Unspscs
type Unspsc struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Parent               int64    `protobuf:"varint,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt            string   `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Unspsc) Reset()         { *m = Unspsc{} }
func (m *Unspsc) String() string { return proto.CompactTextString(m) }
func (*Unspsc) ProtoMessage()    {}
func (*Unspsc) Descriptor() ([]byte, []int) {
	return fileDescriptor_169f1574304aeaca, []int{0}
}

func (m *Unspsc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Unspsc.Unmarshal(m, b)
}
func (m *Unspsc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Unspsc.Marshal(b, m, deterministic)
}
func (m *Unspsc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Unspsc.Merge(m, src)
}
func (m *Unspsc) XXX_Size() int {
	return xxx_messageInfo_Unspsc.Size(m)
}
func (m *Unspsc) XXX_DiscardUnknown() {
	xxx_messageInfo_Unspsc.DiscardUnknown(m)
}

var xxx_messageInfo_Unspsc proto.InternalMessageInfo

func (m *Unspsc) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Unspsc) GetParent() int64 {
	if m != nil {
		return m.Parent
	}
	return 0
}

func (m *Unspsc) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Unspsc) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Unspsc) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Request struct {
	Unspsc               *Unspsc  `protobuf:"bytes,2,opt,name=unspsc,proto3" json:"unspsc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_169f1574304aeaca, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetUnspsc() *Unspsc {
	if m != nil {
		return m.Unspsc
	}
	return nil
}

type Response struct {
	Unspsc               *Unspsc   `protobuf:"bytes,1,opt,name=unspsc,proto3" json:"unspsc,omitempty"`
	Unspscs              []*Unspsc `protobuf:"bytes,2,rep,name=unspscs,proto3" json:"unspscs,omitempty"`
	Valid                bool      `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_169f1574304aeaca, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetUnspsc() *Unspsc {
	if m != nil {
		return m.Unspsc
	}
	return nil
}

func (m *Response) GetUnspscs() []*Unspsc {
	if m != nil {
		return m.Unspscs
	}
	return nil
}

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*Unspsc)(nil), "unspsc.Unspsc")
	proto.RegisterType((*Request)(nil), "unspsc.Request")
	proto.RegisterType((*Response)(nil), "unspsc.Response")
}

func init() { proto.RegisterFile("proto/unspsc/unspsc.proto", fileDescriptor_169f1574304aeaca) }

var fileDescriptor_169f1574304aeaca = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0xb5, 0x5f, 0xe9, 0xee, 0x2c, 0xac, 0x32, 0x88, 0x54, 0x41, 0x28, 0x3d, 0x48, 0x51, 0x77,
	0xc5, 0xfa, 0x0b, 0xca, 0x2a, 0x5e, 0x3c, 0x05, 0x7a, 0x96, 0xda, 0x0e, 0x58, 0xac, 0x6d, 0x6d,
	0x52, 0xf1, 0xec, 0xff, 0x16, 0xc4, 0x24, 0x45, 0x0f, 0xb2, 0x74, 0x4f, 0x99, 0x79, 0xef, 0xcd,
	0xe4, 0x3d, 0x12, 0x38, 0xee, 0xfa, 0x56, 0xb6, 0x57, 0x43, 0x23, 0x3a, 0x51, 0x98, 0x63, 0xad,
	0x30, 0x64, 0xba, 0x8b, 0x3e, 0x2d, 0x60, 0x99, 0x2a, 0x71, 0x09, 0x76, 0x55, 0x06, 0x56, 0x68,
	0xc5, 0x0e, 0xb7, 0xab, 0x12, 0x8f, 0x80, 0x75, 0x79, 0x4f, 0x8d, 0x0c, 0x6c, 0x85, 0x99, 0x0e,
	0x11, 0xdc, 0x26, 0x7f, 0xa5, 0xc0, 0x09, 0xad, 0x78, 0xce, 0x55, 0x8d, 0xa7, 0x00, 0x45, 0x4f,
	0xb9, 0xa4, 0xf2, 0x31, 0x97, 0x81, 0xab, 0x98, 0xb9, 0x41, 0x52, 0xf9, 0x43, 0x0f, 0x5d, 0x39,
	0xd2, 0x9e, 0xa6, 0x0d, 0x92, 0xca, 0xe8, 0x1a, 0x7c, 0x4e, 0x6f, 0x03, 0x09, 0x89, 0x67, 0x60,
	0x9c, 0xa9, 0x4b, 0x17, 0xc9, 0x72, 0x6d, 0x6c, 0x6b, 0x93, 0x7c, 0xf4, 0xdd, 0xc3, 0x8c, 0x93,
	0xe8, 0xda, 0x46, 0xd0, 0x9f, 0x19, 0x6b, 0xdb, 0x0c, 0xc6, 0xe0, 0xeb, 0x4a, 0x04, 0x76, 0xe8,
	0xfc, 0x23, 0x1c, 0x69, 0x3c, 0x04, 0xef, 0x3d, 0xaf, 0xab, 0x52, 0x65, 0x9c, 0x71, 0xdd, 0x24,
	0x5f, 0x36, 0xf8, 0x99, 0x51, 0x24, 0xb0, 0xd8, 0x3c, 0x53, 0xf1, 0xb2, 0x51, 0x19, 0x71, 0x7f,
	0xdc, 0x64, 0x72, 0x9c, 0x1c, 0xfc, 0x02, 0xda, 0x65, 0xb4, 0x87, 0x97, 0xe0, 0xdd, 0x7d, 0x54,
	0x42, 0x4e, 0x53, 0x9f, 0x83, 0x93, 0xd6, 0xf5, 0x34, 0xed, 0x05, 0xb8, 0x0f, 0xbb, 0x2c, 0xbe,
	0xa7, 0x89, 0xda, 0x15, 0xb0, 0x5d, 0x12, 0xae, 0x80, 0x65, 0xea, 0x55, 0x27, 0xcb, 0x6f, 0xa9,
	0xa6, 0x89, 0xf2, 0x27, 0xa6, 0xbe, 0xee, 0xcd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x22,
	0xe5, 0x9e, 0xd7, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Unspscs service

type UnspscsClient interface {
	// 检查批量创建
	CheckCreate(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 检查国际商品及服务编码
	Exist(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 全部国际商品及服务编码
	All(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 获取国际商品及服务编码编码列表
	List(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 根据 唯一 获取国际商品及服务编码编码信息
	Get(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 创建国际商品及服务编码编码
	Create(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 更新国际商品及服务编码编码
	Update(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	// 删除国际商品及服务编码编码
	Delete(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type unspscsClient struct {
	c           client.Client
	serviceName string
}

func NewUnspscsClient(serviceName string, c client.Client) UnspscsClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "unspsc"
	}
	return &unspscsClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *unspscsClient) CheckCreate(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.CheckCreate", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unspscsClient) Exist(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.Exist", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unspscsClient) All(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.All", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unspscsClient) List(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.List", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unspscsClient) Get(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.Get", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unspscsClient) Create(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unspscsClient) Update(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *unspscsClient) Delete(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Unspscs.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Unspscs service

type UnspscsHandler interface {
	// 检查批量创建
	CheckCreate(context.Context, *Request, *Response) error
	// 检查国际商品及服务编码
	Exist(context.Context, *Request, *Response) error
	// 全部国际商品及服务编码
	All(context.Context, *Request, *Response) error
	// 获取国际商品及服务编码编码列表
	List(context.Context, *Request, *Response) error
	// 根据 唯一 获取国际商品及服务编码编码信息
	Get(context.Context, *Request, *Response) error
	// 创建国际商品及服务编码编码
	Create(context.Context, *Request, *Response) error
	// 更新国际商品及服务编码编码
	Update(context.Context, *Request, *Response) error
	// 删除国际商品及服务编码编码
	Delete(context.Context, *Request, *Response) error
}

func RegisterUnspscsHandler(s server.Server, hdlr UnspscsHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Unspscs{hdlr}, opts...))
}

type Unspscs struct {
	UnspscsHandler
}

func (h *Unspscs) CheckCreate(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.CheckCreate(ctx, in, out)
}

func (h *Unspscs) Exist(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.Exist(ctx, in, out)
}

func (h *Unspscs) All(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.All(ctx, in, out)
}

func (h *Unspscs) List(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.List(ctx, in, out)
}

func (h *Unspscs) Get(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.Get(ctx, in, out)
}

func (h *Unspscs) Create(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.Create(ctx, in, out)
}

func (h *Unspscs) Update(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.Update(ctx, in, out)
}

func (h *Unspscs) Delete(ctx context.Context, in *Request, out *Response) error {
	return h.UnspscsHandler.Delete(ctx, in, out)
}
